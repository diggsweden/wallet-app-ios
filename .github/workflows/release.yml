name: Release

on:
  push:
    branches: [main]

jobs:
  archive-and-upload:
    runs-on: ${{ vars.MACOS_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-env
        with:
          xcode-version: ${{ vars.XCODE_VERSION }}

      - name: 🔐 Install distribution certificate and provisioning profile
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSPHRASE: ${{ secrets.CERTIFICATE_PASSPHRASE }}
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          CERTIFICATE_PATH="$RUNNER_TEMP/certificate.p12"
          PP_PATH="$RUNNER_TEMP/pp.mobileprovision"
          KEYCHAIN_PATH="$RUNNER_TEMP/app-signing.keychain-db"

          echo -n "$CERTIFICATE_BASE64" | base64 --decode -o "$CERTIFICATE_PATH"
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode -o "$PP_PATH"

          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

          security import "$CERTIFICATE_PATH" -P "$CERTIFICATE_PASSPHRASE" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security list-keychain -d user -s "$KEYCHAIN_PATH"

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PP_PATH" ~/Library/MobileDevice/Provisioning\ Profiles

      - name: 📦 Archive app
        run: |
          mkdir -p build
          set -o pipefail
          xcodebuild archive \
            -scheme "Wallet Demo" \
            -configuration Release \
            -archivePath build/walletdemo.xcarchive \
            -destination 'generic/platform=iOS' \
            CODE_SIGN_IDENTITY="Apple Distribution: Myndigheten for digital forvaltning (R5MUUW7M24)" \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="Wallet-Demo" \
            OTHER_CODE_SIGN_FLAGS="--preserve-metadata=entitlements,flags" \
          | xcbeautify

      - name: 📤 Export .ipa
        run: |
          # TODO: add this as a var/secret
          cat > ExportOptions.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store-connect</string>
            <key>signingStyle</key>
            <string>manual</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>se.digg.wallet.demo</key>
              <string>Wallet-Demo</string>
            </dict>
            <key>teamID</key>
            <string>R5MUUW7M24/string>
          </dict>
          </plist>
          EOF

          set -o pipefail
          xcodebuild -exportArchive \
            -archivePath build/walletdemo.xcarchive \
            -exportPath build/export \
            -exportOptionsPlist ExportOptions.plist \
          | xcbeautify

      - name: 🚀 Deploy to App Store (Testflight)
        uses: apple-actions/upload-testflight-build@v3
        with:
          app-path: ${{ github.workspace }}/build/export/walletdemo.ipa
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}
